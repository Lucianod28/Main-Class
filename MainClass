package com.edu4java.samplegame;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import javax.swing.JFrame;
import javax.swing.JPanel;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import java.util.*;
import java.awt.*;

@SuppressWarnings("serial")
public class Game extends JPanel {
   int x = 0;
   int y = 0;
   
   public static void main(String[] args) throws InterruptedException {
      JFrame frame = new JFrame("Ding Dong Ditch");
      Game game = new Game();
      frame.add(game);
      frame.setSize(1000, 800);
      frame.setVisible(true);
      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      while (true) {
         game.moveBall();
         game.repaint();
         Thread.sleep(5);
         
      }
      game.mushroom(g, mushroom);
   }
   
   private void moveBall() {
      x = x + 1;
      y = y + 1;
   }
   @Override
   
   public void paint(Graphics g) {
      super.paint(g);
      Graphics2D g2d = (Graphics2D) g;
      g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
         RenderingHints.VALUE_ANTIALIAS_ON);
      int length = 10;
      for (int i = 0; i <= length; i++){
         g2d.fillOval(300 / 2 + x + 18* i, 20, 18, 13);
      }
   }
   public static void mushroom(Graphics g, ArrayList<Integer> mushroom){
      BufferedImage mushroomPic = null;
      try{
         mushroomPic = ImageIO.read(new File("Mushroom.png"));
      } 
      catch (IOException ex) {
      }
   
      Graphics2D g2d = (Graphics2D) g;
      g.drawImage(mushroomPic, 0, 0, null); // see javadoc for more info on the parameters            
   
      Random rand = new Random();
      for(int i = 0; i <= 90; i++){
         int x = rand.nextInt(WIDTH / 20) * 20;
         int y = rand.nextInt(HEIGHT / 20) * 20;
         if (y > 48 && y < 550){
            g.drawImage(mushroomPic, x, y, null);
            mushroom.add(x); //Saves x and y coordinates to ArrrayList, all even indexes will be x,
            mushroom.add(y); //all odd indexes will be y coordinates
         }
      }
   }
}
